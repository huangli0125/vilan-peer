// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Message.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 信息类型
type MsgType int32

const (
	MsgType_Msg_Auth               MsgType = 0
	MsgType_Msg_AuthAck            MsgType = 1
	MsgType_Msg_UnAuth             MsgType = 2
	MsgType_Msg_StateChanged       MsgType = 3
	MsgType_Msg_Config             MsgType = 4
	MsgType_Msg_ConfigAck          MsgType = 5
	MsgType_Msg_Ping               MsgType = 6
	MsgType_Msg_Pong               MsgType = 7
	MsgType_Msg_GroupPeersRequest  MsgType = 8
	MsgType_Msg_GroupPeersResponse MsgType = 9
	MsgType_Msg_PeerLinksRequest   MsgType = 10
	MsgType_Msg_PeerLinksResponse  MsgType = 11
	MsgType_Msg_Packet             MsgType = 12
	MsgType_Msg_P2PTrigger         MsgType = 13
	MsgType_Msg_P2PAck             MsgType = 14
	MsgType_Msg_P2PTry             MsgType = 15
)

var MsgType_name = map[int32]string{
	0:  "Msg_Auth",
	1:  "Msg_AuthAck",
	2:  "Msg_UnAuth",
	3:  "Msg_StateChanged",
	4:  "Msg_Config",
	5:  "Msg_ConfigAck",
	6:  "Msg_Ping",
	7:  "Msg_Pong",
	8:  "Msg_GroupPeersRequest",
	9:  "Msg_GroupPeersResponse",
	10: "Msg_PeerLinksRequest",
	11: "Msg_PeerLinksResponse",
	12: "Msg_Packet",
	13: "Msg_P2PTrigger",
	14: "Msg_P2PAck",
	15: "Msg_P2PTry",
}

var MsgType_value = map[string]int32{
	"Msg_Auth":               0,
	"Msg_AuthAck":            1,
	"Msg_UnAuth":             2,
	"Msg_StateChanged":       3,
	"Msg_Config":             4,
	"Msg_ConfigAck":          5,
	"Msg_Ping":               6,
	"Msg_Pong":               7,
	"Msg_GroupPeersRequest":  8,
	"Msg_GroupPeersResponse": 9,
	"Msg_PeerLinksRequest":   10,
	"Msg_PeerLinksResponse":  11,
	"Msg_Packet":             12,
	"Msg_P2PTrigger":         13,
	"Msg_P2PAck":             14,
	"Msg_P2PTry":             15,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{0}
}

type Sock struct {
	Family               uint32   `protobuf:"varint,1,opt,name=Family,proto3" json:"Family,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	Addr                 uint32   `protobuf:"varint,3,opt,name=Addr,proto3" json:"Addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sock) Reset()         { *m = Sock{} }
func (m *Sock) String() string { return proto.CompactTextString(m) }
func (*Sock) ProtoMessage()    {}
func (*Sock) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{0}
}

func (m *Sock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sock.Unmarshal(m, b)
}
func (m *Sock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sock.Marshal(b, m, deterministic)
}
func (m *Sock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sock.Merge(m, src)
}
func (m *Sock) XXX_Size() int {
	return xxx_messageInfo_Sock.Size(m)
}
func (m *Sock) XXX_DiscardUnknown() {
	xxx_messageInfo_Sock.DiscardUnknown(m)
}

var xxx_messageInfo_Sock proto.InternalMessageInfo

func (m *Sock) GetFamily() uint32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *Sock) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Sock) GetAddr() uint32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

type IpNet struct {
	NetAddr              uint32   `protobuf:"varint,1,opt,name=net_addr,json=netAddr,proto3" json:"net_addr,omitempty"`
	NetBitLen            uint32   `protobuf:"varint,2,opt,name=net_bit_len,json=netBitLen,proto3" json:"net_bit_len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpNet) Reset()         { *m = IpNet{} }
func (m *IpNet) String() string { return proto.CompactTextString(m) }
func (*IpNet) ProtoMessage()    {}
func (*IpNet) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{1}
}

func (m *IpNet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpNet.Unmarshal(m, b)
}
func (m *IpNet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpNet.Marshal(b, m, deterministic)
}
func (m *IpNet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpNet.Merge(m, src)
}
func (m *IpNet) XXX_Size() int {
	return xxx_messageInfo_IpNet.Size(m)
}
func (m *IpNet) XXX_DiscardUnknown() {
	xxx_messageInfo_IpNet.DiscardUnknown(m)
}

var xxx_messageInfo_IpNet proto.InternalMessageInfo

func (m *IpNet) GetNetAddr() uint32 {
	if m != nil {
		return m.NetAddr
	}
	return 0
}

func (m *IpNet) GetNetBitLen() uint32 {
	if m != nil {
		return m.NetBitLen
	}
	return 0
}

type Statistics struct {
	TransSend            uint64   `protobuf:"varint,1,opt,name=trans_send,json=transSend,proto3" json:"trans_send,omitempty"`
	TransReceive         uint64   `protobuf:"varint,2,opt,name=trans_receive,json=transReceive,proto3" json:"trans_receive,omitempty"`
	P2PSend              uint64   `protobuf:"varint,3,opt,name=p2p_send,json=p2pSend,proto3" json:"p2p_send,omitempty"`
	P2PReceive           uint64   `protobuf:"varint,4,opt,name=p2p_receive,json=p2pReceive,proto3" json:"p2p_receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{2}
}

func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (m *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(m, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetTransSend() uint64 {
	if m != nil {
		return m.TransSend
	}
	return 0
}

func (m *Statistics) GetTransReceive() uint64 {
	if m != nil {
		return m.TransReceive
	}
	return 0
}

func (m *Statistics) GetP2PSend() uint64 {
	if m != nil {
		return m.P2PSend
	}
	return 0
}

func (m *Statistics) GetP2PReceive() uint64 {
	if m != nil {
		return m.P2PReceive
	}
	return 0
}

// 注册信息
type MsgAuth struct {
	PeerMac              uint64   `protobuf:"varint,1,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	PeerName             string   `protobuf:"bytes,2,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	Group                string   `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	PeerOs               string   `protobuf:"bytes,5,opt,name=peer_os,json=peerOs,proto3" json:"peer_os,omitempty"`
	PeerAddr             *IpNet   `protobuf:"bytes,6,opt,name=peer_addr,json=peerAddr,proto3" json:"peer_addr,omitempty"`
	InnerAddr            *IpNet   `protobuf:"bytes,7,opt,name=inner_addr,json=innerAddr,proto3" json:"inner_addr,omitempty"`
	AutoMac              bool     `protobuf:"varint,8,opt,name=auto_mac,json=autoMac,proto3" json:"auto_mac,omitempty"`
	AutoIp               bool     `protobuf:"varint,9,opt,name=auto_ip,json=autoIp,proto3" json:"auto_ip,omitempty"`
	LinkMode             uint32   `protobuf:"varint,10,opt,name=link_mode,json=linkMode,proto3" json:"link_mode,omitempty"`
	LinkQuality          uint32   `protobuf:"varint,11,opt,name=link_quality,json=linkQuality,proto3" json:"link_quality,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAuth) Reset()         { *m = MsgAuth{} }
func (m *MsgAuth) String() string { return proto.CompactTextString(m) }
func (*MsgAuth) ProtoMessage()    {}
func (*MsgAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{3}
}

func (m *MsgAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgAuth.Unmarshal(m, b)
}
func (m *MsgAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgAuth.Marshal(b, m, deterministic)
}
func (m *MsgAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuth.Merge(m, src)
}
func (m *MsgAuth) XXX_Size() int {
	return xxx_messageInfo_MsgAuth.Size(m)
}
func (m *MsgAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuth proto.InternalMessageInfo

func (m *MsgAuth) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgAuth) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *MsgAuth) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *MsgAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *MsgAuth) GetPeerOs() string {
	if m != nil {
		return m.PeerOs
	}
	return ""
}

func (m *MsgAuth) GetPeerAddr() *IpNet {
	if m != nil {
		return m.PeerAddr
	}
	return nil
}

func (m *MsgAuth) GetInnerAddr() *IpNet {
	if m != nil {
		return m.InnerAddr
	}
	return nil
}

func (m *MsgAuth) GetAutoMac() bool {
	if m != nil {
		return m.AutoMac
	}
	return false
}

func (m *MsgAuth) GetAutoIp() bool {
	if m != nil {
		return m.AutoIp
	}
	return false
}

func (m *MsgAuth) GetLinkMode() uint32 {
	if m != nil {
		return m.LinkMode
	}
	return 0
}

func (m *MsgAuth) GetLinkQuality() uint32 {
	if m != nil {
		return m.LinkQuality
	}
	return 0
}

type MsgAuthAck struct {
	AuthRes              int32    `protobuf:"zigzag32,1,opt,name=auth_res,json=authRes,proto3" json:"auth_res,omitempty"`
	Token                uint32   `protobuf:"varint,2,opt,name=token,proto3" json:"token,omitempty"`
	AssignMac            bool     `protobuf:"varint,3,opt,name=assign_mac,json=assignMac,proto3" json:"assign_mac,omitempty"`
	PeerMac              uint64   `protobuf:"varint,4,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	AssignIp             bool     `protobuf:"varint,5,opt,name=assign_ip,json=assignIp,proto3" json:"assign_ip,omitempty"`
	PeerAddr             *IpNet   `protobuf:"bytes,6,opt,name=peer_addr,json=peerAddr,proto3" json:"peer_addr,omitempty"`
	Sock                 *Sock    `protobuf:"bytes,7,opt,name=sock,proto3" json:"sock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAuthAck) Reset()         { *m = MsgAuthAck{} }
func (m *MsgAuthAck) String() string { return proto.CompactTextString(m) }
func (*MsgAuthAck) ProtoMessage()    {}
func (*MsgAuthAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{4}
}

func (m *MsgAuthAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgAuthAck.Unmarshal(m, b)
}
func (m *MsgAuthAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgAuthAck.Marshal(b, m, deterministic)
}
func (m *MsgAuthAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthAck.Merge(m, src)
}
func (m *MsgAuthAck) XXX_Size() int {
	return xxx_messageInfo_MsgAuthAck.Size(m)
}
func (m *MsgAuthAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthAck proto.InternalMessageInfo

func (m *MsgAuthAck) GetAuthRes() int32 {
	if m != nil {
		return m.AuthRes
	}
	return 0
}

func (m *MsgAuthAck) GetToken() uint32 {
	if m != nil {
		return m.Token
	}
	return 0
}

func (m *MsgAuthAck) GetAssignMac() bool {
	if m != nil {
		return m.AssignMac
	}
	return false
}

func (m *MsgAuthAck) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgAuthAck) GetAssignIp() bool {
	if m != nil {
		return m.AssignIp
	}
	return false
}

func (m *MsgAuthAck) GetPeerAddr() *IpNet {
	if m != nil {
		return m.PeerAddr
	}
	return nil
}

func (m *MsgAuthAck) GetSock() *Sock {
	if m != nil {
		return m.Sock
	}
	return nil
}

type MsgUnAuth struct {
	PeerMac              uint64   `protobuf:"varint,1,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Token                uint32   `protobuf:"varint,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgUnAuth) Reset()         { *m = MsgUnAuth{} }
func (m *MsgUnAuth) String() string { return proto.CompactTextString(m) }
func (*MsgUnAuth) ProtoMessage()    {}
func (*MsgUnAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{5}
}

func (m *MsgUnAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgUnAuth.Unmarshal(m, b)
}
func (m *MsgUnAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgUnAuth.Marshal(b, m, deterministic)
}
func (m *MsgUnAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnAuth.Merge(m, src)
}
func (m *MsgUnAuth) XXX_Size() int {
	return xxx_messageInfo_MsgUnAuth.Size(m)
}
func (m *MsgUnAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnAuth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnAuth proto.InternalMessageInfo

func (m *MsgUnAuth) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgUnAuth) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *MsgUnAuth) GetToken() uint32 {
	if m != nil {
		return m.Token
	}
	return 0
}

type MsgState struct {
	PeerMac              uint64    `protobuf:"varint,1,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Online               bool      `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	PeerInfo             *PeerInfo `protobuf:"bytes,3,opt,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MsgState) Reset()         { *m = MsgState{} }
func (m *MsgState) String() string { return proto.CompactTextString(m) }
func (*MsgState) ProtoMessage()    {}
func (*MsgState) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{6}
}

func (m *MsgState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgState.Unmarshal(m, b)
}
func (m *MsgState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgState.Marshal(b, m, deterministic)
}
func (m *MsgState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgState.Merge(m, src)
}
func (m *MsgState) XXX_Size() int {
	return xxx_messageInfo_MsgState.Size(m)
}
func (m *MsgState) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgState.DiscardUnknown(m)
}

var xxx_messageInfo_MsgState proto.InternalMessageInfo

func (m *MsgState) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgState) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *MsgState) GetPeerInfo() *PeerInfo {
	if m != nil {
		return m.PeerInfo
	}
	return nil
}

type MsgConfig struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	NewName              string   `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	InnerAddr            *IpNet   `protobuf:"bytes,4,opt,name=inner_addr,json=innerAddr,proto3" json:"inner_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgConfig) Reset()         { *m = MsgConfig{} }
func (m *MsgConfig) String() string { return proto.CompactTextString(m) }
func (*MsgConfig) ProtoMessage()    {}
func (*MsgConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{7}
}

func (m *MsgConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgConfig.Unmarshal(m, b)
}
func (m *MsgConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgConfig.Marshal(b, m, deterministic)
}
func (m *MsgConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConfig.Merge(m, src)
}
func (m *MsgConfig) XXX_Size() int {
	return xxx_messageInfo_MsgConfig.Size(m)
}
func (m *MsgConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConfig proto.InternalMessageInfo

func (m *MsgConfig) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgConfig) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

func (m *MsgConfig) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *MsgConfig) GetInnerAddr() *IpNet {
	if m != nil {
		return m.InnerAddr
	}
	return nil
}

type MsgConfigAck struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	IsOk                 bool     `protobuf:"varint,3,opt,name=is_ok,json=isOk,proto3" json:"is_ok,omitempty"`
	Tip                  string   `protobuf:"bytes,4,opt,name=tip,proto3" json:"tip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgConfigAck) Reset()         { *m = MsgConfigAck{} }
func (m *MsgConfigAck) String() string { return proto.CompactTextString(m) }
func (*MsgConfigAck) ProtoMessage()    {}
func (*MsgConfigAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{8}
}

func (m *MsgConfigAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgConfigAck.Unmarshal(m, b)
}
func (m *MsgConfigAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgConfigAck.Marshal(b, m, deterministic)
}
func (m *MsgConfigAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConfigAck.Merge(m, src)
}
func (m *MsgConfigAck) XXX_Size() int {
	return xxx_messageInfo_MsgConfigAck.Size(m)
}
func (m *MsgConfigAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConfigAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConfigAck proto.InternalMessageInfo

func (m *MsgConfigAck) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgConfigAck) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

func (m *MsgConfigAck) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *MsgConfigAck) GetTip() string {
	if m != nil {
		return m.Tip
	}
	return ""
}

// 心跳
type MsgPing struct {
	PeerName             string      `protobuf:"bytes,1,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	PeerAddr             *IpNet      `protobuf:"bytes,2,opt,name=peer_addr,json=peerAddr,proto3" json:"peer_addr,omitempty"`
	InnerAddr            *IpNet      `protobuf:"bytes,3,opt,name=inner_addr,json=innerAddr,proto3" json:"inner_addr,omitempty"`
	Stats                *Statistics `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	LinkMode             uint32      `protobuf:"varint,5,opt,name=link_mode,json=linkMode,proto3" json:"link_mode,omitempty"`
	LinkQuality          uint32      `protobuf:"varint,6,opt,name=link_quality,json=linkQuality,proto3" json:"link_quality,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MsgPing) Reset()         { *m = MsgPing{} }
func (m *MsgPing) String() string { return proto.CompactTextString(m) }
func (*MsgPing) ProtoMessage()    {}
func (*MsgPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{9}
}

func (m *MsgPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPing.Unmarshal(m, b)
}
func (m *MsgPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPing.Marshal(b, m, deterministic)
}
func (m *MsgPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPing.Merge(m, src)
}
func (m *MsgPing) XXX_Size() int {
	return xxx_messageInfo_MsgPing.Size(m)
}
func (m *MsgPing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPing proto.InternalMessageInfo

func (m *MsgPing) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *MsgPing) GetPeerAddr() *IpNet {
	if m != nil {
		return m.PeerAddr
	}
	return nil
}

func (m *MsgPing) GetInnerAddr() *IpNet {
	if m != nil {
		return m.InnerAddr
	}
	return nil
}

func (m *MsgPing) GetStats() *Statistics {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *MsgPing) GetLinkMode() uint32 {
	if m != nil {
		return m.LinkMode
	}
	return 0
}

func (m *MsgPing) GetLinkQuality() uint32 {
	if m != nil {
		return m.LinkQuality
	}
	return 0
}

type MsgPong struct {
	PongRes              uint32   `protobuf:"varint,1,opt,name=pong_res,json=pongRes,proto3" json:"pong_res,omitempty"`
	Sock                 *Sock    `protobuf:"bytes,2,opt,name=sock,proto3" json:"sock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPong) Reset()         { *m = MsgPong{} }
func (m *MsgPong) String() string { return proto.CompactTextString(m) }
func (*MsgPong) ProtoMessage()    {}
func (*MsgPong) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{10}
}

func (m *MsgPong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPong.Unmarshal(m, b)
}
func (m *MsgPong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPong.Marshal(b, m, deterministic)
}
func (m *MsgPong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPong.Merge(m, src)
}
func (m *MsgPong) XXX_Size() int {
	return xxx_messageInfo_MsgPong.Size(m)
}
func (m *MsgPong) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPong.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPong proto.InternalMessageInfo

func (m *MsgPong) GetPongRes() uint32 {
	if m != nil {
		return m.PongRes
	}
	return 0
}

func (m *MsgPong) GetSock() *Sock {
	if m != nil {
		return m.Sock
	}
	return nil
}

// p2p 启动
type MsgP2PTrigger struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgP2PTrigger) Reset()         { *m = MsgP2PTrigger{} }
func (m *MsgP2PTrigger) String() string { return proto.CompactTextString(m) }
func (*MsgP2PTrigger) ProtoMessage()    {}
func (*MsgP2PTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{11}
}

func (m *MsgP2PTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgP2PTrigger.Unmarshal(m, b)
}
func (m *MsgP2PTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgP2PTrigger.Marshal(b, m, deterministic)
}
func (m *MsgP2PTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgP2PTrigger.Merge(m, src)
}
func (m *MsgP2PTrigger) XXX_Size() int {
	return xxx_messageInfo_MsgP2PTrigger.Size(m)
}
func (m *MsgP2PTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgP2PTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_MsgP2PTrigger proto.InternalMessageInfo

func (m *MsgP2PTrigger) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgP2PTrigger) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

// P2P
type MsgP2PAck struct {
	PeerMac              uint64   `protobuf:"varint,1,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	SelfExternSock       *Sock    `protobuf:"bytes,3,opt,name=self_extern_sock,json=selfExternSock,proto3" json:"self_extern_sock,omitempty"`
	OtherExternSock      *Sock    `protobuf:"bytes,4,opt,name=other_extern_sock,json=otherExternSock,proto3" json:"other_extern_sock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgP2PAck) Reset()         { *m = MsgP2PAck{} }
func (m *MsgP2PAck) String() string { return proto.CompactTextString(m) }
func (*MsgP2PAck) ProtoMessage()    {}
func (*MsgP2PAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{12}
}

func (m *MsgP2PAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgP2PAck.Unmarshal(m, b)
}
func (m *MsgP2PAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgP2PAck.Marshal(b, m, deterministic)
}
func (m *MsgP2PAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgP2PAck.Merge(m, src)
}
func (m *MsgP2PAck) XXX_Size() int {
	return xxx_messageInfo_MsgP2PAck.Size(m)
}
func (m *MsgP2PAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgP2PAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgP2PAck proto.InternalMessageInfo

func (m *MsgP2PAck) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgP2PAck) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *MsgP2PAck) GetSelfExternSock() *Sock {
	if m != nil {
		return m.SelfExternSock
	}
	return nil
}

func (m *MsgP2PAck) GetOtherExternSock() *Sock {
	if m != nil {
		return m.OtherExternSock
	}
	return nil
}

// 组信息查询
type MsgGroupPeersRequest struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgGroupPeersRequest) Reset()         { *m = MsgGroupPeersRequest{} }
func (m *MsgGroupPeersRequest) String() string { return proto.CompactTextString(m) }
func (*MsgGroupPeersRequest) ProtoMessage()    {}
func (*MsgGroupPeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{13}
}

func (m *MsgGroupPeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgGroupPeersRequest.Unmarshal(m, b)
}
func (m *MsgGroupPeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgGroupPeersRequest.Marshal(b, m, deterministic)
}
func (m *MsgGroupPeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGroupPeersRequest.Merge(m, src)
}
func (m *MsgGroupPeersRequest) XXX_Size() int {
	return xxx_messageInfo_MsgGroupPeersRequest.Size(m)
}
func (m *MsgGroupPeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGroupPeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGroupPeersRequest proto.InternalMessageInfo

func (m *MsgGroupPeersRequest) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgGroupPeersRequest) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type PeerInfo struct {
	PeerName             string      `protobuf:"bytes,1,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	DevType              string      `protobuf:"bytes,2,opt,name=dev_type,json=devType,proto3" json:"dev_type,omitempty"`
	NetAddr              uint32      `protobuf:"varint,3,opt,name=net_addr,json=netAddr,proto3" json:"net_addr,omitempty"`
	InterAddr            uint32      `protobuf:"varint,4,opt,name=inter_addr,json=interAddr,proto3" json:"inter_addr,omitempty"`
	PeerMac              uint64      `protobuf:"varint,5,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	NetBitLen            uint32      `protobuf:"varint,6,opt,name=net_bit_len,json=netBitLen,proto3" json:"net_bit_len,omitempty"`
	InterNetBitLen       uint32      `protobuf:"varint,7,opt,name=inter_net_bit_len,json=interNetBitLen,proto3" json:"inter_net_bit_len,omitempty"`
	Online               bool        `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"`
	LinkMode             uint32      `protobuf:"varint,9,opt,name=link_mode,json=linkMode,proto3" json:"link_mode,omitempty"`
	LinkQuality          uint32      `protobuf:"varint,10,opt,name=link_quality,json=linkQuality,proto3" json:"link_quality,omitempty"`
	Stats                *Statistics `protobuf:"bytes,11,opt,name=stats,proto3" json:"stats,omitempty"`
	Sock                 *Sock       `protobuf:"bytes,12,opt,name=sock,proto3" json:"sock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{14}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *PeerInfo) GetDevType() string {
	if m != nil {
		return m.DevType
	}
	return ""
}

func (m *PeerInfo) GetNetAddr() uint32 {
	if m != nil {
		return m.NetAddr
	}
	return 0
}

func (m *PeerInfo) GetInterAddr() uint32 {
	if m != nil {
		return m.InterAddr
	}
	return 0
}

func (m *PeerInfo) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *PeerInfo) GetNetBitLen() uint32 {
	if m != nil {
		return m.NetBitLen
	}
	return 0
}

func (m *PeerInfo) GetInterNetBitLen() uint32 {
	if m != nil {
		return m.InterNetBitLen
	}
	return 0
}

func (m *PeerInfo) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *PeerInfo) GetLinkMode() uint32 {
	if m != nil {
		return m.LinkMode
	}
	return 0
}

func (m *PeerInfo) GetLinkQuality() uint32 {
	if m != nil {
		return m.LinkQuality
	}
	return 0
}

func (m *PeerInfo) GetStats() *Statistics {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *PeerInfo) GetSock() *Sock {
	if m != nil {
		return m.Sock
	}
	return nil
}

type MsgGroupPeersResponse struct {
	Cookie               uint32      `protobuf:"varint,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	PeerInfo             []*PeerInfo `protobuf:"bytes,2,rep,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MsgGroupPeersResponse) Reset()         { *m = MsgGroupPeersResponse{} }
func (m *MsgGroupPeersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGroupPeersResponse) ProtoMessage()    {}
func (*MsgGroupPeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{15}
}

func (m *MsgGroupPeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgGroupPeersResponse.Unmarshal(m, b)
}
func (m *MsgGroupPeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgGroupPeersResponse.Marshal(b, m, deterministic)
}
func (m *MsgGroupPeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGroupPeersResponse.Merge(m, src)
}
func (m *MsgGroupPeersResponse) XXX_Size() int {
	return xxx_messageInfo_MsgGroupPeersResponse.Size(m)
}
func (m *MsgGroupPeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGroupPeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGroupPeersResponse proto.InternalMessageInfo

func (m *MsgGroupPeersResponse) GetCookie() uint32 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

func (m *MsgGroupPeersResponse) GetPeerInfo() []*PeerInfo {
	if m != nil {
		return m.PeerInfo
	}
	return nil
}

// 端信息查询
type MsgPeerLinksRequest struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPeerLinksRequest) Reset()         { *m = MsgPeerLinksRequest{} }
func (m *MsgPeerLinksRequest) String() string { return proto.CompactTextString(m) }
func (*MsgPeerLinksRequest) ProtoMessage()    {}
func (*MsgPeerLinksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{16}
}

func (m *MsgPeerLinksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPeerLinksRequest.Unmarshal(m, b)
}
func (m *MsgPeerLinksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPeerLinksRequest.Marshal(b, m, deterministic)
}
func (m *MsgPeerLinksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPeerLinksRequest.Merge(m, src)
}
func (m *MsgPeerLinksRequest) XXX_Size() int {
	return xxx_messageInfo_MsgPeerLinksRequest.Size(m)
}
func (m *MsgPeerLinksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPeerLinksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPeerLinksRequest proto.InternalMessageInfo

func (m *MsgPeerLinksRequest) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgPeerLinksRequest) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

type LinkInfo struct {
	Addr                 uint32   `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Rx                   uint64   `protobuf:"varint,2,opt,name=rx,proto3" json:"rx,omitempty"`
	Tx                   uint64   `protobuf:"varint,3,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkInfo) Reset()         { *m = LinkInfo{} }
func (m *LinkInfo) String() string { return proto.CompactTextString(m) }
func (*LinkInfo) ProtoMessage()    {}
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{17}
}

func (m *LinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkInfo.Unmarshal(m, b)
}
func (m *LinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkInfo.Marshal(b, m, deterministic)
}
func (m *LinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkInfo.Merge(m, src)
}
func (m *LinkInfo) XXX_Size() int {
	return xxx_messageInfo_LinkInfo.Size(m)
}
func (m *LinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LinkInfo proto.InternalMessageInfo

func (m *LinkInfo) GetAddr() uint32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *LinkInfo) GetRx() uint64 {
	if m != nil {
		return m.Rx
	}
	return 0
}

func (m *LinkInfo) GetTx() uint64 {
	if m != nil {
		return m.Tx
	}
	return 0
}

type MsgPeerLinksResponse struct {
	SrcMac               uint64      `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64      `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	Cookie               uint32      `protobuf:"varint,3,opt,name=cookie,proto3" json:"cookie,omitempty"`
	LinkInfo             []*LinkInfo `protobuf:"bytes,4,rep,name=link_info,json=linkInfo,proto3" json:"link_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MsgPeerLinksResponse) Reset()         { *m = MsgPeerLinksResponse{} }
func (m *MsgPeerLinksResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPeerLinksResponse) ProtoMessage()    {}
func (*MsgPeerLinksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{18}
}

func (m *MsgPeerLinksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPeerLinksResponse.Unmarshal(m, b)
}
func (m *MsgPeerLinksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPeerLinksResponse.Marshal(b, m, deterministic)
}
func (m *MsgPeerLinksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPeerLinksResponse.Merge(m, src)
}
func (m *MsgPeerLinksResponse) XXX_Size() int {
	return xxx_messageInfo_MsgPeerLinksResponse.Size(m)
}
func (m *MsgPeerLinksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPeerLinksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPeerLinksResponse proto.InternalMessageInfo

func (m *MsgPeerLinksResponse) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgPeerLinksResponse) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

func (m *MsgPeerLinksResponse) GetCookie() uint32 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

func (m *MsgPeerLinksResponse) GetLinkInfo() []*LinkInfo {
	if m != nil {
		return m.LinkInfo
	}
	return nil
}

// 终端发送的各类消息，通常只有其中一个有效
type MsgPeerFrame struct {
	MsgType              MsgType               `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3,enum=protocol.MsgType" json:"msg_type,omitempty"`
	PeerMac              uint64                `protobuf:"varint,2,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Token                uint32                `protobuf:"varint,3,opt,name=token,proto3" json:"token,omitempty"`
	MsgAuth              *MsgAuth              `protobuf:"bytes,4,opt,name=msg_auth,json=msgAuth,proto3" json:"msg_auth,omitempty"`
	MsgUnAuth            *MsgUnAuth            `protobuf:"bytes,5,opt,name=msg_un_auth,json=msgUnAuth,proto3" json:"msg_un_auth,omitempty"`
	MsgPing              *MsgPing              `protobuf:"bytes,6,opt,name=msg_ping,json=msgPing,proto3" json:"msg_ping,omitempty"`
	MsgP2PTrigger        *MsgP2PTrigger        `protobuf:"bytes,7,opt,name=msg_p2p_trigger,json=msgP2pTrigger,proto3" json:"msg_p2p_trigger,omitempty"`
	MsgGroupPeer         *MsgGroupPeersRequest `protobuf:"bytes,8,opt,name=msg_group_peer,json=msgGroupPeer,proto3" json:"msg_group_peer,omitempty"`
	MsgLinks             *MsgPeerLinksRequest  `protobuf:"bytes,9,opt,name=msg_links,json=msgLinks,proto3" json:"msg_links,omitempty"`
	MsgLinksAck          *MsgPeerLinksResponse `protobuf:"bytes,10,opt,name=msg_links_ack,json=msgLinksAck,proto3" json:"msg_links_ack,omitempty"`
	MsgConfig            *MsgConfig            `protobuf:"bytes,11,opt,name=msg_config,json=msgConfig,proto3" json:"msg_config,omitempty"`
	MsgConfigAck         *MsgConfigAck         `protobuf:"bytes,12,opt,name=msg_config_ack,json=msgConfigAck,proto3" json:"msg_config_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MsgPeerFrame) Reset()         { *m = MsgPeerFrame{} }
func (m *MsgPeerFrame) String() string { return proto.CompactTextString(m) }
func (*MsgPeerFrame) ProtoMessage()    {}
func (*MsgPeerFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{19}
}

func (m *MsgPeerFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPeerFrame.Unmarshal(m, b)
}
func (m *MsgPeerFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPeerFrame.Marshal(b, m, deterministic)
}
func (m *MsgPeerFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPeerFrame.Merge(m, src)
}
func (m *MsgPeerFrame) XXX_Size() int {
	return xxx_messageInfo_MsgPeerFrame.Size(m)
}
func (m *MsgPeerFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPeerFrame.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPeerFrame proto.InternalMessageInfo

func (m *MsgPeerFrame) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_Msg_Auth
}

func (m *MsgPeerFrame) GetPeerMac() uint64 {
	if m != nil {
		return m.PeerMac
	}
	return 0
}

func (m *MsgPeerFrame) GetToken() uint32 {
	if m != nil {
		return m.Token
	}
	return 0
}

func (m *MsgPeerFrame) GetMsgAuth() *MsgAuth {
	if m != nil {
		return m.MsgAuth
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgUnAuth() *MsgUnAuth {
	if m != nil {
		return m.MsgUnAuth
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgPing() *MsgPing {
	if m != nil {
		return m.MsgPing
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgP2PTrigger() *MsgP2PTrigger {
	if m != nil {
		return m.MsgP2PTrigger
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgGroupPeer() *MsgGroupPeersRequest {
	if m != nil {
		return m.MsgGroupPeer
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgLinks() *MsgPeerLinksRequest {
	if m != nil {
		return m.MsgLinks
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgLinksAck() *MsgPeerLinksResponse {
	if m != nil {
		return m.MsgLinksAck
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgConfig() *MsgConfig {
	if m != nil {
		return m.MsgConfig
	}
	return nil
}

func (m *MsgPeerFrame) GetMsgConfigAck() *MsgConfigAck {
	if m != nil {
		return m.MsgConfigAck
	}
	return nil
}

// 服务端返回的普通消息
type MsgServerFrame struct {
	MsgType              MsgType                `protobuf:"varint,21,opt,name=msg_type,json=msgType,proto3,enum=protocol.MsgType" json:"msg_type,omitempty"`
	MsgAuthAck           *MsgAuthAck            `protobuf:"bytes,22,opt,name=msg_auth_ack,json=msgAuthAck,proto3" json:"msg_auth_ack,omitempty"`
	MsgState             *MsgState              `protobuf:"bytes,23,opt,name=msg_state,json=msgState,proto3" json:"msg_state,omitempty"`
	MsgPong              *MsgPong               `protobuf:"bytes,24,opt,name=msg_pong,json=msgPong,proto3" json:"msg_pong,omitempty"`
	MsgP2PTrigger        *MsgP2PTrigger         `protobuf:"bytes,25,opt,name=msg_p2p_trigger,json=msgP2pTrigger,proto3" json:"msg_p2p_trigger,omitempty"`
	MsgP2PAck            *MsgP2PAck             `protobuf:"bytes,26,opt,name=msg_p2p_ack,json=msgP2pAck,proto3" json:"msg_p2p_ack,omitempty"`
	MsgGroupPeerAck      *MsgGroupPeersResponse `protobuf:"bytes,27,opt,name=msg_group_peer_ack,json=msgGroupPeerAck,proto3" json:"msg_group_peer_ack,omitempty"`
	MsgLinks             *MsgPeerLinksRequest   `protobuf:"bytes,28,opt,name=msg_links,json=msgLinks,proto3" json:"msg_links,omitempty"`
	MsgLinksAck          *MsgPeerLinksResponse  `protobuf:"bytes,29,opt,name=msg_links_ack,json=msgLinksAck,proto3" json:"msg_links_ack,omitempty"`
	MsgConfig            *MsgConfig             `protobuf:"bytes,30,opt,name=msg_config,json=msgConfig,proto3" json:"msg_config,omitempty"`
	MsgConfigAck         *MsgConfigAck          `protobuf:"bytes,31,opt,name=msg_config_ack,json=msgConfigAck,proto3" json:"msg_config_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MsgServerFrame) Reset()         { *m = MsgServerFrame{} }
func (m *MsgServerFrame) String() string { return proto.CompactTextString(m) }
func (*MsgServerFrame) ProtoMessage()    {}
func (*MsgServerFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{20}
}

func (m *MsgServerFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgServerFrame.Unmarshal(m, b)
}
func (m *MsgServerFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgServerFrame.Marshal(b, m, deterministic)
}
func (m *MsgServerFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServerFrame.Merge(m, src)
}
func (m *MsgServerFrame) XXX_Size() int {
	return xxx_messageInfo_MsgServerFrame.Size(m)
}
func (m *MsgServerFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServerFrame.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServerFrame proto.InternalMessageInfo

func (m *MsgServerFrame) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_Msg_Auth
}

func (m *MsgServerFrame) GetMsgAuthAck() *MsgAuthAck {
	if m != nil {
		return m.MsgAuthAck
	}
	return nil
}

func (m *MsgServerFrame) GetMsgState() *MsgState {
	if m != nil {
		return m.MsgState
	}
	return nil
}

func (m *MsgServerFrame) GetMsgPong() *MsgPong {
	if m != nil {
		return m.MsgPong
	}
	return nil
}

func (m *MsgServerFrame) GetMsgP2PTrigger() *MsgP2PTrigger {
	if m != nil {
		return m.MsgP2PTrigger
	}
	return nil
}

func (m *MsgServerFrame) GetMsgP2PAck() *MsgP2PAck {
	if m != nil {
		return m.MsgP2PAck
	}
	return nil
}

func (m *MsgServerFrame) GetMsgGroupPeerAck() *MsgGroupPeersResponse {
	if m != nil {
		return m.MsgGroupPeerAck
	}
	return nil
}

func (m *MsgServerFrame) GetMsgLinks() *MsgPeerLinksRequest {
	if m != nil {
		return m.MsgLinks
	}
	return nil
}

func (m *MsgServerFrame) GetMsgLinksAck() *MsgPeerLinksResponse {
	if m != nil {
		return m.MsgLinksAck
	}
	return nil
}

func (m *MsgServerFrame) GetMsgConfig() *MsgConfig {
	if m != nil {
		return m.MsgConfig
	}
	return nil
}

func (m *MsgServerFrame) GetMsgConfigAck() *MsgConfigAck {
	if m != nil {
		return m.MsgConfigAck
	}
	return nil
}

// 数据经由服务端转发 转发时不必复制数据
// P2P 打通后也使用该报文
type MsgDataFrame struct {
	MsgType              MsgType  `protobuf:"varint,50,opt,name=msg_type,json=msgType,proto3,enum=protocol.MsgType" json:"msg_type,omitempty"`
	SrcMac               uint64   `protobuf:"varint,51,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,52,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	Token                uint32   `protobuf:"varint,53,opt,name=token,proto3" json:"token,omitempty"`
	Data                 []byte   `protobuf:"bytes,54,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDataFrame) Reset()         { *m = MsgDataFrame{} }
func (m *MsgDataFrame) String() string { return proto.CompactTextString(m) }
func (*MsgDataFrame) ProtoMessage()    {}
func (*MsgDataFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b0f1bc979aed9f, []int{21}
}

func (m *MsgDataFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDataFrame.Unmarshal(m, b)
}
func (m *MsgDataFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDataFrame.Marshal(b, m, deterministic)
}
func (m *MsgDataFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDataFrame.Merge(m, src)
}
func (m *MsgDataFrame) XXX_Size() int {
	return xxx_messageInfo_MsgDataFrame.Size(m)
}
func (m *MsgDataFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDataFrame.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDataFrame proto.InternalMessageInfo

func (m *MsgDataFrame) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_Msg_Auth
}

func (m *MsgDataFrame) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *MsgDataFrame) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

func (m *MsgDataFrame) GetToken() uint32 {
	if m != nil {
		return m.Token
	}
	return 0
}

func (m *MsgDataFrame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*Sock)(nil), "protocol.Sock")
	proto.RegisterType((*IpNet)(nil), "protocol.IpNet")
	proto.RegisterType((*Statistics)(nil), "protocol.Statistics")
	proto.RegisterType((*MsgAuth)(nil), "protocol.MsgAuth")
	proto.RegisterType((*MsgAuthAck)(nil), "protocol.MsgAuthAck")
	proto.RegisterType((*MsgUnAuth)(nil), "protocol.MsgUnAuth")
	proto.RegisterType((*MsgState)(nil), "protocol.MsgState")
	proto.RegisterType((*MsgConfig)(nil), "protocol.MsgConfig")
	proto.RegisterType((*MsgConfigAck)(nil), "protocol.MsgConfigAck")
	proto.RegisterType((*MsgPing)(nil), "protocol.MsgPing")
	proto.RegisterType((*MsgPong)(nil), "protocol.MsgPong")
	proto.RegisterType((*MsgP2PTrigger)(nil), "protocol.MsgP2PTrigger")
	proto.RegisterType((*MsgP2PAck)(nil), "protocol.MsgP2PAck")
	proto.RegisterType((*MsgGroupPeersRequest)(nil), "protocol.MsgGroupPeersRequest")
	proto.RegisterType((*PeerInfo)(nil), "protocol.PeerInfo")
	proto.RegisterType((*MsgGroupPeersResponse)(nil), "protocol.MsgGroupPeersResponse")
	proto.RegisterType((*MsgPeerLinksRequest)(nil), "protocol.MsgPeerLinksRequest")
	proto.RegisterType((*LinkInfo)(nil), "protocol.LinkInfo")
	proto.RegisterType((*MsgPeerLinksResponse)(nil), "protocol.MsgPeerLinksResponse")
	proto.RegisterType((*MsgPeerFrame)(nil), "protocol.MsgPeerFrame")
	proto.RegisterType((*MsgServerFrame)(nil), "protocol.MsgServerFrame")
	proto.RegisterType((*MsgDataFrame)(nil), "protocol.MsgDataFrame")
}

func init() {
	proto.RegisterFile("Message.proto", fileDescriptor_64b0f1bc979aed9f)
}

var fileDescriptor_64b0f1bc979aed9f = []byte{
	// 1565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x72, 0xdb, 0x46,
	0x12, 0x5e, 0xfe, 0x83, 0xcd, 0x1f, 0x41, 0x63, 0x59, 0xa2, 0xec, 0x95, 0xad, 0xc5, 0x5e, 0xb4,
	0xae, 0x2d, 0xb9, 0x0a, 0xde, 0x75, 0x6d, 0xb9, 0xb6, 0x76, 0x4b, 0xb6, 0xd7, 0x5e, 0x55, 0x99,
	0x32, 0x03, 0x3b, 0x67, 0x04, 0x06, 0x47, 0x10, 0x8a, 0xe4, 0x00, 0xc6, 0x8c, 0x64, 0xe9, 0x0d,
	0x52, 0x49, 0x2e, 0xb9, 0xe5, 0x39, 0x72, 0xcf, 0xab, 0xe4, 0x98, 0x73, 0x6e, 0xb9, 0xa6, 0xba,
	0x07, 0x00, 0x01, 0x92, 0x12, 0x4b, 0xf1, 0x89, 0xe8, 0x99, 0xee, 0x9e, 0xee, 0x9e, 0xef, 0xeb,
	0x69, 0x42, 0x6f, 0xc8, 0xa5, 0xf4, 0x02, 0x7e, 0x18, 0x27, 0x91, 0x8a, 0x98, 0x41, 0x3f, 0x7e,
	0x34, 0xb5, 0x5e, 0x41, 0xfd, 0x5d, 0xe4, 0x4f, 0xd8, 0x36, 0x34, 0x5f, 0x79, 0xb3, 0x70, 0x7a,
	0x35, 0xa8, 0xec, 0x57, 0x0e, 0x7a, 0x4e, 0x2a, 0x31, 0x06, 0xf5, 0x51, 0x94, 0xa8, 0x41, 0x95,
	0x56, 0xe9, 0x1b, 0xd7, 0x8e, 0xc6, 0xe3, 0x64, 0x50, 0xd3, 0x6b, 0xf8, 0x6d, 0x3d, 0x87, 0xc6,
	0x71, 0x7c, 0xc2, 0x15, 0xdb, 0x05, 0x43, 0x70, 0xe5, 0x7a, 0xa8, 0xa0, 0x5d, 0xb5, 0x04, 0x57,
	0xa8, 0xc3, 0x1e, 0x40, 0x07, 0xb7, 0x3e, 0x84, 0xca, 0x9d, 0x72, 0x91, 0xba, 0x6c, 0x0b, 0xae,
	0x9e, 0x87, 0xea, 0x0d, 0x17, 0xd6, 0x77, 0x15, 0x80, 0x77, 0xca, 0x53, 0xa1, 0x54, 0xa1, 0x2f,
	0xd9, 0x1e, 0x80, 0x4a, 0x3c, 0x21, 0x5d, 0xc9, 0xc5, 0x98, 0x7c, 0xd5, 0x9d, 0x36, 0xad, 0xbc,
	0xe3, 0x62, 0xcc, 0xfe, 0x0a, 0x3d, 0xbd, 0x9d, 0x70, 0x9f, 0x87, 0x17, 0x9c, 0xfc, 0xd5, 0x9d,
	0x2e, 0x2d, 0x3a, 0x7a, 0x0d, 0xa3, 0x89, 0xed, 0x58, 0x7b, 0xa8, 0xd1, 0x7e, 0x2b, 0xb6, 0x63,
	0xb2, 0x7f, 0x08, 0x1d, 0xdc, 0xca, 0xac, 0xeb, 0xb4, 0x0b, 0xb1, 0x1d, 0xa7, 0xb6, 0xd6, 0xcf,
	0x55, 0x68, 0x0d, 0x65, 0x70, 0x74, 0xae, 0xce, 0xc8, 0x0f, 0xe7, 0x89, 0x3b, 0xf3, 0xfc, 0x34,
	0x92, 0x16, 0xca, 0x43, 0xcf, 0x67, 0xf7, 0xa1, 0x4d, 0x5b, 0xc2, 0x9b, 0xe9, 0x18, 0xda, 0x0e,
	0xe9, 0x9e, 0x78, 0x33, 0xce, 0xb6, 0xa0, 0x11, 0x24, 0xd1, 0x79, 0x4c, 0x87, 0xb7, 0x1d, 0x2d,
	0xb0, 0x7b, 0x60, 0xc4, 0x9e, 0x94, 0x9f, 0xa2, 0x64, 0x4c, 0xe7, 0xa2, 0x45, 0x2a, 0xb3, 0x1d,
	0x20, 0xcf, 0x6e, 0x24, 0x07, 0x0d, 0xda, 0x6a, 0xa2, 0xf8, 0x56, 0xb2, 0xbf, 0xa7, 0xe7, 0x50,
	0x65, 0x9b, 0xfb, 0x95, 0x83, 0x8e, 0xbd, 0x71, 0x98, 0xdd, 0xe3, 0x21, 0x15, 0x5f, 0x1f, 0x4c,
	0xb5, 0x3e, 0x04, 0x08, 0x85, 0xc8, 0xd4, 0x5b, 0xab, 0xd5, 0xdb, 0xa4, 0x42, 0xfa, 0xbb, 0x60,
	0x78, 0xe7, 0x2a, 0xa2, 0x04, 0x8d, 0xfd, 0xca, 0x81, 0xe1, 0xb4, 0x50, 0xc6, 0x04, 0x77, 0x80,
	0x3e, 0xdd, 0x30, 0x1e, 0xb4, 0x69, 0xa7, 0x89, 0xe2, 0x71, 0x8c, 0x99, 0x4f, 0x43, 0x31, 0x71,
	0x67, 0xd1, 0x98, 0x0f, 0x80, 0x6e, 0xd3, 0xc0, 0x85, 0x61, 0x34, 0xe6, 0xec, 0x2f, 0xd0, 0xa5,
	0xcd, 0x8f, 0xe7, 0xde, 0x34, 0x54, 0x57, 0x83, 0x0e, 0xed, 0x77, 0x70, 0xed, 0x0b, 0xbd, 0x64,
	0xfd, 0x52, 0x01, 0x48, 0x0b, 0x7c, 0xe4, 0x4f, 0xd2, 0x10, 0xce, 0xdc, 0x84, 0x4b, 0xaa, 0xf1,
	0x26, 0x85, 0x70, 0xe6, 0x70, 0x89, 0x65, 0x54, 0xd1, 0x24, 0xc7, 0x8c, 0x16, 0x10, 0x20, 0x9e,
	0x94, 0x61, 0x20, 0x28, 0xea, 0x1a, 0xc5, 0xd6, 0xd6, 0x2b, 0x18, 0x77, 0xf1, 0xce, 0xea, 0x4b,
	0x77, 0x96, 0x5a, 0x86, 0x31, 0x95, 0xd9, 0x70, 0x0c, 0xbd, 0x70, 0x1c, 0xdf, 0xb2, 0xd0, 0x16,
	0xd4, 0x65, 0xe4, 0x4f, 0xd2, 0x12, 0xf7, 0xe7, 0x8a, 0x48, 0x2b, 0x87, 0xf6, 0x2c, 0x07, 0xda,
	0x43, 0x19, 0x7c, 0x29, 0xd6, 0x41, 0x29, 0x47, 0x4b, 0xb5, 0x88, 0x96, 0x3c, 0xf9, 0x5a, 0x21,
	0x79, 0x4b, 0x80, 0x31, 0x94, 0x01, 0xd2, 0x85, 0xdf, 0xe4, 0x72, 0x1b, 0x9a, 0x91, 0x98, 0x86,
	0x42, 0x43, 0xd3, 0x70, 0x52, 0x89, 0x3d, 0x4e, 0x93, 0x0c, 0xc5, 0x69, 0x44, 0x8e, 0x3b, 0x36,
	0x9b, 0xc7, 0x3e, 0xe2, 0x3c, 0x39, 0x16, 0xa7, 0x91, 0xce, 0x13, 0xbf, 0xac, 0xaf, 0x2b, 0x94,
	0xc4, 0x8b, 0x48, 0x9c, 0x86, 0x01, 0x62, 0x42, 0x26, 0x7e, 0xe1, 0xc0, 0xa6, 0x4c, 0xfc, 0x14,
	0x2c, 0x63, 0xa9, 0x68, 0x43, 0xf3, 0xb1, 0x39, 0x96, 0x2a, 0xbd, 0x0d, 0xc1, 0x3f, 0x69, 0x96,
	0x68, 0x32, 0xb4, 0x04, 0xff, 0x44, 0x24, 0x29, 0x63, 0xb5, 0xbe, 0x0e, 0xab, 0x56, 0x00, 0xdd,
	0x3c, 0x12, 0x04, 0xce, 0xed, 0x83, 0xb9, 0x03, 0x8d, 0x50, 0xba, 0xd1, 0x24, 0x05, 0x4d, 0x3d,
	0x94, 0x6f, 0x27, 0xcc, 0x84, 0x9a, 0x0a, 0xe3, 0x94, 0x90, 0xf8, 0x69, 0xfd, 0x5a, 0xa1, 0x0e,
	0x30, 0x0a, 0x45, 0x50, 0xa6, 0x79, 0x65, 0x81, 0xe6, 0x25, 0xc8, 0x54, 0x6f, 0xc7, 0xcd, 0xda,
	0x5a, 0x6e, 0x3e, 0x82, 0x86, 0x54, 0x9e, 0x92, 0x69, 0x69, 0xb6, 0x0a, 0x18, 0xcb, 0xbb, 0xa5,
	0xa3, 0x55, 0xca, 0x9c, 0x6c, 0xac, 0xe1, 0x64, 0x73, 0x99, 0x93, 0xff, 0xd7, 0x19, 0x47, 0x22,
	0x20, 0x54, 0x45, 0x22, 0xc8, 0xf9, 0xd8, 0x73, 0x5a, 0x28, 0x23, 0x1f, 0x33, 0xd0, 0x57, 0x6f,
	0x00, 0xfd, 0x11, 0xf4, 0xd0, 0x93, 0x3d, 0x7a, 0x9f, 0x84, 0x41, 0xc0, 0x93, 0xdb, 0x5f, 0x93,
	0xf5, 0xa3, 0xc6, 0xdc, 0xc8, 0x1e, 0xa5, 0xfd, 0xe1, 0x06, 0xe2, 0x5c, 0x78, 0xd3, 0x70, 0x9c,
	0x82, 0x5c, 0x0b, 0xec, 0x5f, 0x60, 0x4a, 0x3e, 0x3d, 0x75, 0xf9, 0xa5, 0xe2, 0x89, 0x70, 0x29,
	0xe2, 0xda, 0xca, 0x88, 0xfb, 0xa8, 0xf7, 0x3f, 0x52, 0xa3, 0xd7, 0xf0, 0x19, 0x6c, 0x46, 0xea,
	0x8c, 0x27, 0x25, 0xd3, 0xfa, 0x4a, 0xd3, 0x0d, 0x52, 0x9c, 0xdb, 0x5a, 0x27, 0xb0, 0x35, 0x94,
	0xc1, 0x6b, 0xa4, 0x2e, 0xd2, 0x48, 0x3a, 0xfc, 0xe3, 0x39, 0x97, 0xea, 0xfa, 0xf4, 0xf7, 0x00,
	0x88, 0xe8, 0xc5, 0x17, 0xa4, 0x4d, 0x2b, 0x88, 0x2d, 0xeb, 0x9b, 0x1a, 0x18, 0x19, 0x1f, 0x6f,
	0x46, 0xe1, 0x2e, 0x18, 0x63, 0x7e, 0xe1, 0xaa, 0xab, 0x38, 0x73, 0xd3, 0x1a, 0xf3, 0x8b, 0xf7,
	0x57, 0x31, 0x2f, 0xbd, 0xca, 0xb5, 0xf2, 0xab, 0xbc, 0x87, 0x68, 0x54, 0x45, 0xf6, 0xf5, 0x10,
	0x7c, 0x6a, 0xfe, 0x30, 0xe4, 0x55, 0x6f, 0x94, 0xab, 0xbe, 0xf0, 0x9e, 0x37, 0x17, 0xde, 0x73,
	0xf6, 0x37, 0xd8, 0xd4, 0x9e, 0x8b, 0x5a, 0x2d, 0xd2, 0xea, 0xd3, 0xc6, 0x49, 0xae, 0x3a, 0x6f,
	0x53, 0x46, 0xa9, 0x4d, 0x95, 0xe0, 0xdc, 0x5e, 0x03, 0x67, 0x58, 0x82, 0xf3, 0x9c, 0x3a, 0x9d,
	0xf5, 0xd4, 0xc9, 0x40, 0xdd, 0xbd, 0x01, 0xd4, 0x5f, 0xc1, 0xdd, 0x85, 0xcb, 0x95, 0x71, 0x24,
	0x24, 0xc7, 0x04, 0xfc, 0x28, 0x9a, 0x84, 0x3c, 0x9b, 0x9f, 0xb4, 0x54, 0xee, 0xb3, 0xd5, 0xfd,
	0xda, 0xda, 0x3e, 0xfb, 0x1a, 0xee, 0x20, 0xe4, 0x39, 0x4f, 0xde, 0x84, 0x62, 0xb2, 0x1e, 0x3d,
	0xd7, 0x92, 0xe7, 0x3f, 0x60, 0xa0, 0x07, 0x82, 0x0d, 0x83, 0x7a, 0x61, 0x20, 0xa3, 0x6f, 0xd6,
	0x87, 0x6a, 0x72, 0x99, 0xda, 0x54, 0x93, 0x4b, 0x94, 0xd5, 0x65, 0x3a, 0x24, 0x55, 0xd5, 0xa5,
	0xf5, 0x7d, 0x85, 0x80, 0x5c, 0x88, 0x24, 0x4d, 0xf5, 0xf6, 0xed, 0x76, 0x5e, 0x9c, 0xda, 0x62,
	0x71, 0xe8, 0x02, 0xa9, 0x38, 0xf5, 0xc5, 0xe2, 0x64, 0xd1, 0xeb, 0x1b, 0xa7, 0xe2, 0xfc, 0x56,
	0xa7, 0xd6, 0x8f, 0x31, 0xbd, 0x4a, 0x74, 0xe3, 0x35, 0x66, 0x32, 0xd0, 0x90, 0xc7, 0x60, 0xfa,
	0xf6, 0xe6, 0xdc, 0xc1, 0x50, 0x06, 0x08, 0x7e, 0xa7, 0x35, 0xd3, 0x1f, 0x25, 0x2c, 0x57, 0x97,
	0x3a, 0xc8, 0xf2, 0x23, 0x9b, 0xb9, 0xc7, 0x31, 0x24, 0xa5, 0x7f, 0xd9, 0x3d, 0x3e, 0xe8, 0xe4,
	0x9e, 0x5e, 0xf6, 0x27, 0xd0, 0x41, 0xed, 0x73, 0xa1, 0x0d, 0x1a, 0x64, 0x70, 0xa7, 0x64, 0xa0,
	0x67, 0x00, 0xa7, 0x3d, 0xcb, 0xc7, 0x81, 0xf4, 0x88, 0x38, 0x14, 0x41, 0x3a, 0x6c, 0x94, 0x8f,
	0xc0, 0xc7, 0x87, 0x8e, 0xa0, 0x57, 0xe8, 0xbf, 0xb0, 0x41, 0xda, 0x76, 0xec, 0x2a, 0xdd, 0x56,
	0xd3, 0xc1, 0x63, 0xa7, 0x6c, 0x94, 0x77, 0x5d, 0xa7, 0x87, 0xa6, 0x76, 0x9c, 0x35, 0xe1, 0x97,
	0xd0, 0x47, 0x07, 0xba, 0xe1, 0x60, 0xf2, 0x44, 0xb8, 0x8e, 0xfd, 0xa0, 0x64, 0xbf, 0xd4, 0xbd,
	0x9c, 0xee, 0xac, 0xb0, 0xca, 0x9e, 0x01, 0x66, 0xe0, 0xe2, 0xbd, 0x48, 0xa2, 0x65, 0xc7, 0xde,
	0x2b, 0x07, 0xb0, 0x80, 0x5f, 0x07, 0x93, 0xa4, 0x05, 0xf6, 0x1c, 0x7a, 0xb9, 0xad, 0xeb, 0xf9,
	0x13, 0xa2, 0xed, 0x62, 0x00, 0x4b, 0xa8, 0x73, 0x3a, 0x99, 0x03, 0x7c, 0x0a, 0x6c, 0x00, 0xf4,
	0xe1, 0xd3, 0x08, 0x90, 0x72, 0xbb, 0x5c, 0x68, 0x3d, 0x1d, 0x50, 0xa1, 0xd3, 0x91, 0xe5, 0xdf,
	0x3a, 0x73, 0x6d, 0x43, 0x07, 0x6b, 0xa2, 0x6f, 0xaf, 0xb0, 0x3b, 0xf2, 0x27, 0x94, 0x71, 0x2e,
	0x59, 0xdf, 0x36, 0xa0, 0x8f, 0xf3, 0x16, 0x4f, 0x2e, 0x56, 0x61, 0xef, 0xee, 0x5a, 0xec, 0x3d,
	0x85, 0x6e, 0x06, 0x25, 0x3a, 0x7c, 0x7b, 0xb1, 0x21, 0xcd, 0x27, 0x61, 0x07, 0x66, 0xf3, 0xa9,
	0xf8, 0xb1, 0x2e, 0x35, 0xb6, 0x28, 0x3e, 0xd8, 0x59, 0x1c, 0xd4, 0xb2, 0x11, 0x90, 0xea, 0xab,
	0x87, 0xc1, 0x0c, 0x50, 0x91, 0x08, 0x06, 0x83, 0x55, 0x80, 0x8a, 0x32, 0x40, 0x45, 0xab, 0x01,
	0xb5, 0x7b, 0x2b, 0x40, 0xa5, 0xa0, 0x47, 0x07, 0x98, 0xd6, 0xbd, 0x15, 0x77, 0xa1, 0xdf, 0x6f,
	0xba, 0x8b, 0x91, 0x1d, 0x63, 0x52, 0x6f, 0x80, 0x95, 0x51, 0x48, 0xb6, 0xf7, 0xc9, 0xf6, 0xe1,
	0xb5, 0x48, 0x4c, 0x91, 0xb0, 0x51, 0x84, 0xe2, 0x11, 0xbd, 0xd6, 0x05, 0x34, 0xfe, 0xf9, 0x33,
	0xd1, 0xb8, 0xf7, 0xb9, 0x68, 0x7c, 0xf0, 0x07, 0xd1, 0xf8, 0xf0, 0x16, 0x68, 0xfc, 0xa1, 0x42,
	0x7d, 0xf0, 0xa5, 0xa7, 0xbc, 0x65, 0x2c, 0xda, 0x6b, 0xb1, 0x58, 0xe8, 0xe0, 0x4f, 0xae, 0xeb,
	0xe0, 0xff, 0x28, 0x75, 0xf0, 0xbc, 0x3d, 0xfe, 0xb3, 0xd8, 0x1e, 0x19, 0xd4, 0xc7, 0x9e, 0xf2,
	0x06, 0x4f, 0xf7, 0x2b, 0x07, 0x5d, 0x87, 0xbe, 0x1f, 0xfd, 0xa4, 0xff, 0x35, 0xd3, 0x39, 0x5d,
	0xfa, 0x8f, 0xe2, 0x22, 0x94, 0xcd, 0x3f, 0xb1, 0x0d, 0xe8, 0x64, 0xd2, 0x91, 0x3f, 0x31, 0x2b,
	0xac, 0x4f, 0x7f, 0xff, 0x5c, 0xdd, 0x08, 0xcd, 0x2a, 0xdb, 0x02, 0x13, 0x65, 0x82, 0xf1, 0x8b,
	0x33, 0x4f, 0x04, 0x7c, 0x6c, 0xd6, 0x32, 0x2d, 0x9d, 0xbc, 0x59, 0x67, 0x9b, 0x34, 0x57, 0xba,
	0x79, 0x31, 0xcc, 0x46, 0x76, 0x0e, 0x76, 0x48, 0xb3, 0x99, 0x4b, 0x91, 0x08, 0xcc, 0x16, 0xdb,
	0xa5, 0x17, 0xdb, 0x5d, 0xea, 0x68, 0xa6, 0xc1, 0xee, 0xc1, 0xf6, 0xe2, 0x96, 0xbe, 0x5e, 0xb3,
	0xcd, 0x06, 0xf4, 0xf8, 0xb9, 0x8b, 0xc8, 0x31, 0x21, 0x73, 0xb8, 0x84, 0x09, 0xb3, 0x93, 0x85,
	0x3a, 0xf2, 0xfc, 0x09, 0x57, 0x66, 0x97, 0x31, 0xea, 0x19, 0xee, 0x9c, 0x3c, 0x66, 0x2f, 0xd7,
	0x21, 0x4e, 0x98, 0xfd, 0x82, 0xfc, 0x3e, 0xb9, 0x32, 0x37, 0x3e, 0x34, 0xe9, 0xda, 0x9e, 0xfc,
	0x1e, 0x00, 0x00, 0xff, 0xff, 0xef, 0xe3, 0xb3, 0xb6, 0xb2, 0x11, 0x00, 0x00,
}
